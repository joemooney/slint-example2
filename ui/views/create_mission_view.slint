import { ComboBox, LineEdit, VerticalBox, Button, SpinBox } from "std-widgets.slint";
import { MyComboBox } from "../common.slint";
import { IconButton } from "../widgets/icon_button.slint";
import { TextButton } from "../widgets/text_button.slint";
import { Icons, FontSettings, TodoPalette, SpaceSettings } from "../widgets/styling.slint";
import { FrequencyPresetSlintStruct } from "../adapters/frequency_adapter.slint";
import { PowerPresetSlintStruct } from "../adapters/power_adapter.slint";
import { FrequencyPresetAdapter } from "../adapters/frequency_adapter.slint";
import { MissionPowerView } from "../widgets/mission_power_view.slint";

// @rust-attr(derive(serde::Serialize, serde::Deserialize))
// export struct MissionSlintStruct {
//     mission_name: string,
//     mission_desc: string,
//     mission_details: string,
//     checked: bool,
//     power_model: PowerPresetSlintStruct,
//     frequency_model: FrequencyPresetSlintStruct
// }
// import { PowerPresetSlintStruct } from "../views/create_power_preset_view.slint";
// import { FrequencyPresetSlintStruct } from "../views/create_frequency_preset_view.slint";

@rust-attr(derive(serde::Serialize, serde::Deserialize))
export struct MissionSlintStruct {
    mission_name: string,
    mission_id: int,
    mission_desc: string,
    mission_details: string,
    // power_preset: string,
    power_model: PowerPresetSlintStruct,
    // frequency_preset: string,
    frequency_model: FrequencyPresetSlintStruct,
    checked: bool,
}


// export global CreateMissionAdapter {
//     in-out property <int> index;
//     in-out property <string> mode: "Create";
//     in-out property <MissionSlintStruct> mission;

//     callback create(
//         /* mission*/ MissionSlintStruct
//         );
//     callback update(
//         /* index */ int, 
//         /* mission*/ MissionSlintStruct
//         );
//     callback back();
//     pure callback next-mission-id() -> int;
//     pure callback validate_mission-id(int) -> int;

//     // dummy implementation for live preview
//     next-mission-id() => { 9 }

//     public function change_power_preset(preset: string) { }
// }

export component CreateMissionView {
    callback cancel_operation();
    callback create_mission();
    callback update_mission();
    callback changed_field(string, string) -> bool;
    in-out property <int> index;
    in-out property <string> mode: "Create";
    in-out property <MissionSlintStruct> mission;

    VerticalBox {
        padding: 10px;
        alignment: start;
         HorizontalLayout {
            IconButton {
                icon: Icons.close;
                accessible-label: @tr("Cancel New Mission Creation");

                clicked => {
                    cancel_operation();
                    // root.reset();
                    // CreateMissionAdapter.back();
                }
            }

            // spacer
            Rectangle { }


            Button {
                text: mode;
                enabled: mission-name-input.text != "";
                primary: true;

                clicked => {
                    if mode == "Create" {
                        create_mission();
                    } else {
                        update_mission();
                    }
                }
            }
        }

        VerticalLayout {
            spacing: SpaceSettings.default-spacing;

            GridLayout {
                spacing: 10px;
                // padding: 10px;
                Row{
                    mission-name-label := Text {
                        text: @tr("Mission name");
                        color: TodoPalette.foreground;
                        font-size: FontSettings.body-strong.font-size;
                        font-weight: FontSettings.body-strong.font-weight;
                        horizontal-alignment: left;
                        overflow: elide;
                    }
                    mission-name-input := LineEdit {
                        text: mission.mission-name;
                        placeholder-text: @tr("Mission Name (alphanumber, underscore, hyphen)");
                        accessible-label: mission-name-label.text;
                        changed text => { 
                            if changed_field("mission_name", self.text) {
                                mission-name_label.color = Colors.black;
                            } else {
                                mission-name_label.color = Colors.red;
                            }
                        }
                    }
                }
                Row {
                    mission-id-label := Text {
                        text: @tr("Mission ID");
                        color: TodoPalette.foreground;
                        font-size: FontSettings.body-strong.font-size;
                        font-weight: FontSettings.body-strong.font-weight;
                        horizontal-alignment: left;
                        overflow: elide;
                    }
                    mission-id-input := SpinBox {
                        minimum: 1;
                        maximum: 99;
                        value: mission.mission-id;
                        accessible-label: mission-id-label.text;
                    }
                }
                Row {
                    mission-desc-label := Text {
                        text: @tr("Description");
                        color: TodoPalette.foreground;
                        font-size: FontSettings.body-strong.font-size;
                        font-weight: FontSettings.body-strong.font-weight;
                        horizontal-alignment: left;
                        overflow: elide;
                    }
                    mission-desc-input := LineEdit {
                        
                        placeholder-text: @tr("Mission Description");
                        text: mission.mission-name;
                        accessible-label: mission-desc-label.text;
                    }
                }
            }


            frequency-preset-label := Text {
                text: @tr("Frequency Preset");
                color: TodoPalette.foreground;
                font-size: FontSettings.body-strong.font-size;
                font-weight: FontSettings.body-strong.font-weight;
                horizontal-alignment: left;
                overflow: elide;
            }
            Rectangle { } // spacer
            frequency-preset-input := ComboBox {
                current-value: mission.frequency-model.preset-name;
                model: [@tr("default"), @tr("band-a"), @tr("band-b")];
            }

            MissionPowerView {}
        }
    }

    // function reset() {
    //     mission-name-input.text = "";
    //     mission-desc-input.text = "";
    //     mission-id-input.value = 0;
    // }

    // function update() {
    //     CreateMissionAdapter.back();
    //     CreateMissionAdapter.update(
    //         CreateMissionAdapter.index,
    //         CreateMissionAdapter.mission
    //         // mission-name-input.text, 
    //         // mission-id-input.value,  
    //         // mission-desc-input.text, 
    //         // CreateMissionAdapter.frequency-preset,
    //         // CreateMissionAdapter.power-preset,
    //     );
    //     root.reset();
    // }
    // function create() {
    //     CreateMissionAdapter.back();
    //     CreateMissionAdapter.create(
    //         CreateMissionAdapter.mission
    //         // mission-name-input.text, 
    //         // mission-id-input.value,  
    //         // mission-desc-input.text, 
    //         // CreateMissionAdapter.frequency-preset,
    //         // CreateMissionAdapter.power-preset,
    //     );
    //     root.reset();
    // }
}
