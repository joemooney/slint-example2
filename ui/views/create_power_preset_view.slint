import { ComboBox, LineEdit, VerticalBox, Button, SpinBox } from "std-widgets.slint";
import { MyComboBox, MySpinBox } from "../common.slint";
import { IconButton } from "../widgets/icon_button.slint";
import { TextButton } from "../widgets/text_button.slint";
import { Icons, FontSettings, TodoPalette, SpaceSettings } from "../widgets/styling.slint";
// import { CreateFrequencyPresetAdapter } from "create_frequency_preset_view.slint";
// import { PowerPresetAdapter } from "../adapters/power_adapter.slint";
import { PowerPresetSlintStruct } from "../adapters/power_adapter.slint";


// @rust-attr(derive(serde::Serialize, serde::Deserialize))
// export struct PowerPresetSlintStruct {
//     preset_name: string,
//     preset_desc: string,
//     preset_details: string,
//     checked: bool,
//     power1: float,
//     power2: float,
//     power3: float,
//     power4: float,
//     power5: float,
//     power6: float,
//     power7: float,
//     power8: float,
//     power9: int,
//     power10: int,
// }

// export global CreatePowerPresetAdapter {
//     in-out property <int> index;  /* row if we are editing */
//     in-out property <string> mode: "Create";  /* changes to Update if we are editing */
//     in-out property <PowerPresetSlintStruct> preset;  /* changes to Update if we are editing */

//     // in-out property <float> power2: 0;
//     // in-out property <float> power3: 0;
//     // in-out property <float> power4: 0;
//     // in-out property <float> power5: 0;
//     // in-out property <float> power6: 0;
//     // in-out property <float> power7: 0;
//     // in-out property <float> power8: 0;
//     // in-out property <int> power9: 0;
//     // in-out property <int> power10: 0;

//     // in-out property <string> preset-name: 0;
//     // in-out property <string> preset-desc: 0;
//     // in-out property <float> power1: 0;
//     // in-out property <float> power2: 0;
//     // in-out property <float> power3: 0;
//     // in-out property <float> power4: 0;
//     // in-out property <float> power5: 0;
//     // in-out property <float> power6: 0;
//     // in-out property <float> power7: 0;
//     // in-out property <float> power8: 0;
//     // in-out property <int> power9: 0;
//     // in-out property <int> power10: 0;

//     // callback create(
//     //     /* preset-name */ string, 
//     //     /* preset-desc */ string, 
//     //     /* power1 */ float,
//     //     /* power2 */ float,
//     //     /* power3 */ float,
//     //     /* power4 */ float,
//     //     /* power5 */ float,
//     //     /* power6 */ float,
//     //     /* power7 */ float,
//     //     /* power8 */ float,
//     //     /* power9 */ int,
//     //     /* power10 */ int, );

//     // callback update(
//     //     /* index */ int, 
//     //     /* preset-name */ string, 
//     //     /* preset-desc */ string, 
//     //     /* power1 */ float,
//     //     /* power2 */ float,
//     //     /* power3 */ float,
//     //     /* power4 */ float,
//     //     /* power5 */ float,
//     //     /* power6 */ float,
//     //     /* power7 */ float,
//     //     /* power8 */ float,
//     //     /* power9 */ int,
//     //     /* power10 */ int, );

//     callback create(
//         /* preset */ PowerPresetSlintStruct 
//        );

//     callback update(
//         /* index */ int, 
//         /* preset */ PowerPresetSlintStruct 
//        );

//     // function edit(
//     //     xreset_name: string, 
//     //     // preset-desc: string, 
//     //     // xower1: float,
//     //     // power2: float,
//     //     // power3: float,
//     //     // power4: float,
//     //     // power5: float,
//     //     // power6: float,
//     //     // power7: float,
//     //     // power8: float,
//     //     // power9: int,
//     //     // power10: int, 
//     //     ) {
//     //         preset-name = xreset_name;
//     // }
//     callback back();
//     pure callback validate_preset-name(string) -> int;

//     public function change_preset_desc(value: string) {
//         preset.preset-desc = value;
//     }
//     public function change_preset_name(value: string) {
//         preset.preset-name = value;
//     }
//     public function change_power1(value: float) {
//         preset.power1 = value;
//     }
//     public function change_power2(value: float) {
//         preset.power2 = value;
//     }
//     public function change_power3(value: float) {
//         preset.power4 = value;
//     }
//     public function change_power4(value: float) {
//         preset.power4 = value;
//     }
//     public function change_power5(value: float) {
//         preset.power5 = value;
//     }
//     public function change_power6(value: float) {
//         preset.power6 = value;
//     }
//     public function change_power7(value: float) {
//         preset.power7 = value;
//     }
//     public function change_power8(value: float) {
//         preset.power8 = value;
//     }
//     public function change_power9(value: float) {
//         preset.power9 = value;
//     }
//     public function change_power10(value: float) {
//         preset.power10 = value;
//     }
// }

export component CreatePowerPresetView {
    callback cancel_operation();
    callback create_power_preset();
    callback update_power_preset();
    callback changed_field(string, string) -> bool;
    callback changed_power(string, float) -> bool;
    in-out property <int> index;
    in-out property <string> display_mode: "Create";
    in-out property <PowerPresetSlintStruct> preset;

    property <string> preset-name-label: "Name";
    property <string> preset-name-desc: "Description";
    property <string> _power1_label: "Power1";
    property <string> _power2_label: "Power2";
    property <string> _power3_label: "Power3";
    property <string> _power4_label: "Power4";
    property <string> _power5_label: "Power5";
    property <string> _power6_label: "Power6";
    property <string> _power7_label: "Power7";
    property <string> _power8_label: "Power8";
    property <string> _power9_label: "Power9";
    property <string> _power10_label: "Power10";

    VerticalBox {
        padding: 10px;
        alignment: start;
        HorizontalLayout {
            IconButton {
                icon: Icons.close;
                accessible-label: @tr("Cancel Operation");

                clicked => {
                    cancel_operation();
                }
            }

            // spacer
            Rectangle { }

            Button {
                text: display_mode;
                enabled: preset-name-input.text != "";
                primary: true;

                clicked => {
                    if display_mode == "Create" {
                        create_power_preset();
                    } else {
                        update_power_preset();
                    }
                }
            }
        }

        VerticalLayout {
            spacing: SpaceSettings.default-spacing;

            preset-name-label := Text {
                text: @tr("PowerPreset name");
                color: TodoPalette.foreground;
                font-size: FontSettings.body-strong.font-size;
                font-weight: FontSettings.body-strong.font-weight;
                horizontal-alignment: left;
                overflow: elide;
            }

            Rectangle { } // spacer
            preset-name-input := LineEdit {
                text: preset.preset-name;
                placeholder-text: @tr("PowerPreset Name (alphanumber, underscore, hyphen)");
                accessible-label: preset-name-label.text;
                changed text => {
                    changed_field("preset_name", self.text);
                }
            }

            preset-desc-label := Text {
                text: @tr("PowerPreset Description");
                color: TodoPalette.foreground;
                font-size: FontSettings.body-strong.font-size;
                font-weight: FontSettings.body-strong.font-weight;
                horizontal-alignment: left;
                overflow: elide;
            }

            Rectangle { } // spacer
            preset-desc-input := LineEdit {
                text: preset.preset-desc;
                placeholder-text: @tr("PowerPreset Description");
                accessible-label: preset-desc-label.text;
                changed text => {
                    changed_field("preset_desc", self.text);
                }
            }

            GridLayout {
                Row {
                    VerticalLayout {
                        power1-label := Text {
                            text: @tr("PowerPreset1");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power1-input := MySpinBox {
                            name: "power1";
                            value: preset.power1;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }

                    Rectangle { } // spacer
                    VerticalLayout {
                        power2-label := Text {
                            text: @tr("PowerPreset2");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power2-input := MySpinBox {
                            name: "power2";
                            value: preset.power2;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }
                }

                Row {
                    VerticalLayout {
                        power3-label := Text {
                            text: @tr("PowerPreset3");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power3-input := MySpinBox {
                            name: "power3";
                            value: preset.power3;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }

                    Rectangle { } // spacer
                    VerticalLayout {
                        power4-label := Text {
                            text: @tr("PowerPreset4");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power4-input := MySpinBox {
                            name: "power4";
                            value: preset.power4;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }
                }

                Row {
                    VerticalLayout {
                        power5-label := Text {
                            text: @tr("PowerPreset5");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power5-input := MySpinBox {
                            name: "power5";
                            value: preset.power5;

                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }

                    Rectangle { } // spacer
                    VerticalLayout {
                        power6-label := Text {
                            text: @tr("PowerPreset6");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power6-input := MySpinBox {
                            name: "power6";
                            value: preset.power6;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }
                }

                Row {
                    VerticalLayout {
                        power7-label := Text {
                            text: @tr("PowerPreset7");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power7-input := MySpinBox {
                            name: "power7";
                            value: preset.power7;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }

                    Rectangle { } // spacer
                    VerticalLayout {
                        power8-label := Text {
                            text: @tr("PowerPreset8");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power8-input := MySpinBox {
                            name: "power8";
                            value: preset.power8;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }
                }

                Row {
                    VerticalLayout {
                        power9-label := Text {
                            text: @tr("PowerPreset9");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power9-input := MySpinBox {
                            name: "power9";
                            value: preset.power9;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }

                    Rectangle { } // spacer
                    VerticalLayout {
                        power10-label := Text {
                            text: @tr("PowerPreset10");
                            color: TodoPalette.foreground;
                            font-size: FontSettings.body-strong.font-size;
                            font-weight: FontSettings.body-strong.font-weight;
                            horizontal-alignment: left;
                            overflow: elide;
                        }

                        Rectangle { } // spacer
                        power10-input := MySpinBox {
                            name: "power10";
                            value: preset.power10;
                            changed value => {
                                changed_power(self.name, self.value);
                            }
                        }
                    }
                }
            }

            Rectangle { }
        }
    }
}
