// Copyright © SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { VerticalBox } from "std-widgets.slint";
// Copyright © SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { SelectionListView, SelectionListViewItem } from "../widgets/selection_list_view.slint";
export { SelectionListViewItem }

import { ActionButton } from "../widgets/action_button.slint";
import { Icons, FontSettings } from "../widgets/styling.slint";

import { TaskSlintStruct } from "../adapters/task_adapter.slint";
export { TaskSlintStruct }


// export global TaskListAdapter {
//     in-out property <[SelectionListViewItem]> tasks: [
//         // this is only dummy data for the preview
//         { title: "Contribute to Slint", description: "2024/11/11 13:13", priority: "low" },
//         { title: "Open a discussion on GitHub", description: "2024/11/11 13:13", priority: "high" },
//         { title: "Write some documentation", description: "2024/11/11 13:13", priority: "med" }
//     ];

//     callback toggle-task-checked(/* index */ int);
//     callback remove-task(/* index */ int);
//     callback show-create-task();

//     // this is only a dummy implementation for the preview
//     toggle-task-checked(index) => {
//         root.tasks[index] = {
//             text: root.item(index).text,
//             priority: root.item(index).priority,
//             checked: !root.item(index).checked,
//             description: root.item(index).description
//         };
//     }

//     function item(index: int) -> SelectionListViewItem {
//         root.tasks[index]
//     }
// }

export component TaskListView {
    in-out property <[TaskSlintStruct]> tasks: [
        // this is only dummy data for the preview
        {title: "task1", priority: "low", description: "desc", due_date: "1/1/1", done: true, }
    ];
    callback show_edit_task(int);
    callback toggle_task_checked(int);
    callback show_create_task();
    callback remove_task(int);

    VerticalBox {
        // vertical-stretch: 0;
        // horizontal-stretch: 0;
        padding-top: 10px;
        padding-left: 10px;
        padding-right: 10px;
        padding-bottom: 10px;
        Text {
            text: "List of Test Tasks";
            horizontal-alignment: center;
            font-size: FontSettings.title2-strong.font-size;
        }

        SelectionListView {
            width: 100%;
            model: tasks;
            accessible-label: @tr("List of Tasks");

            toggle(index) => {
                toggle_task_checked(index);
            }

            remove(index) => {
                remove_task(index);
            }
        }

        HorizontalLayout {
            alignment: center;

            ActionButton {
                icon: Icons.add;
                accessible-label: @tr("Create New Task");

                clicked => {
                    show_create_task();
                }
            }
        }
    }
}
