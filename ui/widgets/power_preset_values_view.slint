import { ComboBox, LineEdit, VerticalBox, Button, SpinBox, HorizontalBox } from "std-widgets.slint";
import { MyComboBox } from "../common.slint";
import { MyPowerValue } from "../widgets/my_power_value.slint";
import { IconButton } from "../widgets/icon_button.slint";
import { TextButton } from "../widgets/text_button.slint";
import { Icons, FontSettings, TodoPalette, SpaceSettings } from "../widgets/styling.slint";
// import { PowerPresetAdapter } from "../adapters/power_adapter.slint";
import { PowerPresetSlintStruct } from "../adapters/power_adapter.slint";
// import { MissionAdapter } from "../adapters/mission_adapter.slint";


export component PowerPresetValuesView {
    callback changed_field(string, string) -> bool;
    callback change_power(string, float) -> bool;
    in-out property <PowerPresetSlintStruct> preset;
    in-out property <[string]> power_preset_names: ["dummy_preset1", "dummy_preset2", "dummy_preset3"];

    property <string> preset-name-label: "Name";
    property <string> preset-name-desc: "Description";
    property <string> power1_label: "Power1";
    property <string> power2_label: "Power2";
    property <string> power3_label: "Power3";
    property <string> power4_label: "Power4";
    property <string> power5_label: "Power5";
    property <string> power6_label: "Power6";
    property <string> power7_label: "Power7";
    property <string> power8_label: "Power8";
    property <string> power9_label: "Power9";
    property <string> power10_label: "Power10";

    VerticalBox {
        padding: 10px;
        alignment: start;
        GridLayout {
            Row {
                HorizontalBox {
                    colspan: 2;
                    power-preset-label := Text {
                        horizontal-alignment: left;
                        text: @tr("Power Preset");
                        color: TodoPalette.foreground;
                        font-size: FontSettings.body-strong.font-size;
                        font-weight: FontSettings.body-strong.font-weight;
                        overflow: elide;
                    }
                    power-preset-input := ComboBox {
                        current-value: preset.preset-name;
                        model <=> power_preset_names;
                        changed  current-value => {
                            call_change_field("power_preset_name", self.current_value);
                        }
                    }
                }
            }
            Row {
                    power1-input := MyPowerValue {
                        label: power1_label;
                        value: preset.power1;
                        name: "power1";
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
                    power2-input := MyPowerValue {
                        name: "power2";
                        value: preset.power2;
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
            }
            Row {
                    power3-input := MyPowerValue {
                        name: "power3";
                        value: preset.power3;
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
                    power4-input := MyPowerValue {
                        name: "power4";
                        value: preset.power4;
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
            }

            Row {
                    power5-input := MyPowerValue {
                        value: preset.power5;
                        name: "power5";
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
                    power6-input := MyPowerValue {
                        value: preset.power6;
                        name: "power6";
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
            }

            Row {
                    power7-input := MyPowerValue {
                        value: preset.power7;
                        name: "power7";
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
                    power8-input := MyPowerValue {
                        value: preset.power8;
                        name: "power8";
                        changed_value(field_name, value) => {
                            call_change_field(field_name, value);
                        }
                    }
            }

            Row {
                power9-input := MyPowerValue {
                    value: preset.power9;
                    name: "power9";
                    changed_value(field_name, value) => {
                        call_change_field(field_name, value);
                    }
                }
                power10-input := MyPowerValue {
                    value: preset.power10;
                    name: "power10";
                    changed_value(field_name, value) => {
                        call_change_field(field_name, value);
                    }
                }
            }
            Row {
                Button {
                    text: "Debug";
                    clicked => {
                        debug(preset);
                    }
                }
            }
        }
    }
    function call_change_field(field_name: string, value: string) {
        debug("changing ", field_name, " to:", value);
        // debug("changing power1 to ", preset.power1);
        changed_field(field_name, value);
        // power1-input.value = preset.power1;
        // power2-input.value = preset.power2;
        // power3-input.value = preset.power3;
        // power4-input.value = preset.power4;
        // power5-input.value = preset.power5;
        // power6-input.value = preset.power6;
        // power7-input.value = preset.power7;
        // power8-input.value = preset.power8;
        // power9-input.value = preset.power9;
        // power10-input.value = preset.power10;
    }

}
